@mixin flex-direction-align-justify-gap-padding(
  $direction,
  $align,
  $justify,
  $gap,
  $padding
) {
  @if index($allowed-directions, $direction) == null {
    @error "Invalid direction value: #{$direction}. Allowed values are: #{$allowed-directions}";
  }
  @if index($allowed-align-items, $align) == null {
    @error "Invalid align-items value: #{$align}. Allowed values are: #{$allowed-align-items}";
  }
  @if index($allowed-justify-content, $justify) == null {
    @error "Invalid justify-content value: #{$justify}. Allowed values are: #{$allowed-justify-content}";
  }

  padding: $padding;
  display: flex;
  justify-content: $justify;
  flex-direction: $direction;
  gap: $gap;
  align-items: $align;
}

@mixin flex-direction-align-gap-padding($direction, $align, $gap, $padding) {
  @if index($allowed-directions, $direction) == null {
    @error "Invalid direction value: #{$direction}. Allowed values are: #{$allowed-directions}";
  }
  @if index($allowed-align-items, $align) == null {
    @error "Invalid align-items value: #{$align}. Allowed values are: #{$allowed-align-items}";
  }
  padding: $padding;
  display: flex;
  flex-direction: $direction;
  gap: $gap;
  align-items: $align;
}

@mixin flex-direction-gap-padding($direction, $gap, $padding) {
  @if index($allowed-directions, $direction) == null {
    @error "Invalid direction value: #{$direction}. Allowed values are: #{$allowed-directions}";
  }
  padding: $padding;
  display: flex;
  flex-direction: $direction;
  gap: $gap;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin center-position($position) {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  position: $position;
}

@mixin text-overflow-ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@mixin text-overflow-ellipsis-warp {
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin no-scrollBar {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin model-boxShadow {
  box-shadow: 0px 10px 3000px 1500px rgba(0, 0, 0, 0.5);
}

@mixin play-btn {
  position: absolute;
  background-color: $green-1;
  border-radius: 100vw;
  width: 3rem;
  @include flex-direction-align-justify-gap-padding(
    row,
    center,
    center,
    0,
    0.75rem
  );
  opacity: 0;
  pointer-events: none;
}

@mixin btn-hover-animation($color) {
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    border-radius: inherit;
    height: 100%;
    background-color: $color;
    transition: width 0.4s ease-in-out;
    z-index: 0;
  }

  &:hover::before {
    width: 100%;
  }
}

@mixin magic-border($width, $color, $duration, $direction) {
  position: relative;
  &:before {
    content: "";
    position: absolute;
    width: calc(100% + #{$width * 2});
    height: calc(100% + #{$width * 2});
    top: calc(#{$width}/ -1);
    left: calc(#{$width}/ -1);
    border-radius: inherit;
    background: linear-gradient(to right, $color 0%, $color 100%),
      linear-gradient(to top, $color 50%, transparent 50%),
      linear-gradient(to top, $color 50%, transparent 50%),
      linear-gradient(to right, $color 0%, $color 100%),
      linear-gradient(to left, $color 0%, $color 100%);
    background-size: 100% $width, $width 200%, $width 200%, 0% $width, 0% $width;
    background-position: 50% 100%, 0% 0%, 100% 0%, 100% 0%, 0% 0%;
    background-repeat: no-repeat, no-repeat;
    transition: transform $duration ease-in-out,
      background-position $duration ease-in-out,
      background-size $duration ease-in-out;
    transform: scaleX(0) rotate(180deg * $direction);
    transition-delay: $duration * 2, $duration, 0s;
  }
  &:hover {
    &:before {
      background-size: 200% $width, $width 400%, $width 400%, 55% $width,
        55% $width;
      background-position: 50% 100%, 0% 100%, 100% 100%, 100% 0%, 0% 0%;
      transform: scaleX(1) rotate(180deg * $direction);
      transition-delay: 0s, $duration, $duration * 2;
    }
  }
}

@mixin after-border-grow($color) {
  &:after {
    content: "";
    display: block;
    width: 0;
    height: 1px;
    background-color: $color;
    transition: width 0.3s;
  }

  &:hover:after {
    width: 100%;
  }
}

@mixin menu-shadow {
  box-shadow: rgba($black-1, 0.3) 0px 16px 24px 0px,
    rgba($black-1, 0.2) 0px 6px 8px 0px;
}

@mixin general-btn {
  @include flex-direction-align-justify-gap-padding(
    row,
    center,
    center,
    0,
    0 1rem
  );
  border-radius: $border-radius-2;

  background-color: $white-2;
  color: $black-2;

  font-weight: 700;
  font-size: $font-size-16;
  height: 2.5rem;

  width: fit-content;
  min-width: 5rem;
  position: relative;

  cursor: pointer;

  overflow: hidden;
  @include btn-hover-animation($gray-1);

  span {
    position: relative;
  }
}

@mixin general-link {
  font-weight: 500;
  display: inline;
  color: $gray-1;
  transition: color 0.3s;
  &:hover {
    color: $white-1;
  }
  @include after-border-grow($gray-1);
}

@mixin img-upload-hover($padding: 25%) {
  position: absolute;
  opacity: 0;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  fill: $gray-1;
  transition: opacity 0.25s ease-in-out;
  @include flex-direction-align-justify-gap-padding(
    column,
    center,
    center,
    1rem,
    $padding
  );
}

@mixin play-btn-song-list($size, $padding: 0.5rem) {
  height: $size;
  width: $size;
  background: $green-1;
  border-radius: 100vw;
  padding: $padding;
}

@mixin full-size {
  width: 100%;
  height: 100%;
}
